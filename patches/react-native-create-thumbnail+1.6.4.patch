diff --git a/node_modules/react-native-create-thumbnail/android/src/main/java/com/createthumbnail/CreateThumbnailModule.java b/node_modules/react-native-create-thumbnail/android/src/main/java/com/createthumbnail/CreateThumbnailModule.java
index 9bd67d8..372c225 100644
--- a/node_modules/react-native-create-thumbnail/android/src/main/java/com/createthumbnail/CreateThumbnailModule.java
+++ b/node_modules/react-native-create-thumbnail/android/src/main/java/com/createthumbnail/CreateThumbnailModule.java
@@ -69,7 +69,8 @@ public class CreateThumbnailModule extends ReactContextBaseJavaModule {
             String format = options.hasKey("format") ? options.getString("format") : "jpeg";
             String cacheName = options.hasKey("cacheName") ? options.getString("cacheName") : "";
 
-            String thumbnailDir = weakContext.get().getApplicationContext().getCacheDir().getAbsolutePath() + "/thumbnails";
+            String thumbnailDir = weakContext.get().getApplicationContext().getCacheDir().getAbsolutePath()
+                    + "/thumbnails";
             File cacheDir = createDirIfNotExists(thumbnailDir);
             if (!TextUtils.isEmpty(cacheName)) {
                 File file = new File(thumbnailDir, cacheName + "." + format);
@@ -88,8 +89,10 @@ public class CreateThumbnailModule extends ReactContextBaseJavaModule {
             String filePath = options.hasKey("url") ? options.getString("url") : "";
             int dirSize = options.hasKey("dirSize") ? options.getInt("dirSize") : 100;
             int timeStamp = options.hasKey("timeStamp") ? options.getInt("timeStamp") : 0;
-            HashMap headers = options.hasKey("headers") ? options.getMap("headers").toHashMap() : new HashMap<String, String>();
-            String fileName = TextUtils.isEmpty(cacheName) ? ("thumb-" + UUID.randomUUID().toString()) : cacheName + "." + format;
+            HashMap headers = options.hasKey("headers") ? options.getMap("headers").toHashMap()
+                    : new HashMap<String, String>();
+            String fileName = TextUtils.isEmpty(cacheName) ? ("thumb-" + UUID.randomUUID().toString())
+                    : cacheName + "." + format;
             OutputStream fOut = null;
             try {
                 File file = new File(cacheDir, fileName);
@@ -189,7 +192,13 @@ public class CreateThumbnailModule extends ReactContextBaseJavaModule {
         }
 
         Bitmap image = retriever.getFrameAtTime(time * 1000, MediaMetadataRetriever.OPTION_CLOSEST_SYNC);
-        retriever.release();
+        try {
+            retriever.release();
+        } catch (Exception e) { // Catching Exception class as it's unclear what specific exception you're
+                                // facing
+            // Handle or log the exception here
+            e.printStackTrace();
+        }
         if (image == null) {
             throw new IllegalStateException("File doesn't exist or not supported");
         }
